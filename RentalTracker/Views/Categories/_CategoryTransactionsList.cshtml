@model IEnumerable<TransactionsListViewModel>

@{
    var ascending = (ViewBag.SortOrder == SortDirection.Ascending);
}

<table class="table table-responsive">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Date", "Details", "Categories",
                    new
                    {
                        dateFilter = ViewBag.DateFilter,
                        fromDate = ViewBag.FromDate,
                        toDate = ViewBag.ToDate,
                        // Inverse of current display to request toggle
                        sortOrder = ascending ? SortDirection.Descending : SortDirection.Ascending
                    },
                    htmlAttributes: ascending ? new { @class = "date-sort-toggle" } :
                                                new { @class = "date-sort-toggle descending" }
                )
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Account)
                <br />
                @Html.DisplayNameFor(model => model.Payee)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Income)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Expense)
            </th>
            <th>
                <span><i class="glyphicon glyphicon-check"></i></span>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Reference)
                <br />
                @Html.DisplayNameFor(model => model.Memo)
            </th>
        </tr>
    </thead>

    <tbody>

        @if (Model.Count() == 0)
        {
            <tr>
                <td>No transactions.</td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(model => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Account)
                        <br />
                        @Html.DisplayFor(model => item.Payee)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Income)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Expense)
                    </td>
                    <td>
                        @if (item.Taxable != null && item.Taxable == true)
                        {
                            <span><i class="glyphicon glyphicon-ok"></i></span>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Reference)
                        <br />
                        @Html.DisplayFor(model => item.Memo)
                    </td>
                </tr>
            }
        }

    </tbody>

</table>
