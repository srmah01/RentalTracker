@model Transaction

@Html.DropDownList("PayeeCategoryMap", new SelectList(ViewBag.PayeeCategoryMap, "PayeeId", "DefaultCategoryId"),
    htmlAttributes: new { @class = "hidden" })

<div class="form-group">
    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
        <div id='transaction-datepicker' class="input-group date">
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
        @Html.DropDownListFor(model => model.AccountId, null, optionLabel: "Please Select", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Payee, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
        @Html.DropDownListFor(model => model.PayeeId, null, optionLabel: "Please Select", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.PayeeId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
        @Html.DropDownListFor(model => model.CategoryId, null, optionLabel: "Please Select", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
        <div class="input-group">
            <span class="input-group-addon">&pound;</span>
            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Taxable, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-1">
        <div class="form-control">
            @{ var checkboxAttributes = Model == null || Model.Taxable ?
                    (object) new { @checked = "checked" } :
                    (object) new { @checked = "uncheked" };
            }
            @Html.CheckBoxFor(model => model.Taxable, checkboxAttributes)
        </div>
        @Html.ValidationMessageFor(model => model.Taxable, "", new { @class = "text-danger" })
    </div>
</div>

@*<div class="form-group">
    @Html.LabelFor(model => model.Taxable, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-1">
        <div class="onoffswitch">
            @{ var checkboxAttributes = Model == null || Model.Taxable ?
                      "checked" :
                      "";
            }
            <input type="checkbox" name="Taxable" class="onoffswitch-checkbox" id="Taxable" @checkboxAttributes data-val="false"/>
            <label class="onoffswitch-label" for="Taxable">
                <span class="onoffswitch-inner"></span>
                <span class="onoffswitch-switch"></span>
            </label>
            <input name="Taxable" type="hidden" value="false" />
        </div>
    </div>
</div>*@


<div class="form-group">
    @Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
        @Html.EditorFor(model => model.Reference, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Memo, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
        @Html.TextAreaFor(model => model.Memo, htmlAttributes: new { @class = "form-control", @rows = 5 })
        @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
    </div>
</div>


